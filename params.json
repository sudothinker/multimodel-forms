{"name":"Multimodel-forms","body":"### Multimodel-Forms\r\n\r\nThis plugin allows multiple models to have a place in one form. For example, if an article model has_many links. The links can be edited, created, deleted and even sorted (acts_as_list) from the article edit/new form. Included ajax helpers so links can be added and deleted client side and db is only touched when form is submitted.\r\n\r\nThis is largely derived from Ryan Bates' tutorial over at: http://railscasts.com/episodes/75\r\n\r\nAcquire via git at: git clone git@github.com:sudothinker/multimodel-forms.git\r\n  \r\nSample project available in multimodel-forms/sample_project - This can be removed if not needed.\r\n\r\n#### Example\r\n\r\narticle.rb\r\n```ruby\r\nclass Article < ActiveRecord::Base\r\n  has_many_with_attributes :links\r\nend\r\n```\r\n\r\nlink.rb\r\n```ruby\r\n  class Link < ActiveRecord::Base\r\n    belongs_to :article\r\n  end\r\n```\r\n\r\n  Can now add a view partial to render the article form and edit the associated links.\r\n\r\n  articles/_form.rhtml\r\n\r\n  <label>Title</label>\r\n  <%= f.text_field :title %>\r\n\r\n  <h3>Links</h3>\r\n  <div id=\"links\">\r\n    <%= render :partial => 'links/link', :collection => @article.links %>\r\n  </div>\r\n\r\n  <%= add_link \"Add link\", :link %>\r\n\r\n  links/_link.rhtml\r\n\r\n  <p class=\"link\">\r\n  <% fields_for_associated :article, link do |l_form| %>\r\n    <%= l_form.text_field :url, :index => nil %>\r\n    <%= delete_link_for(link, \"Delete\", l_form) %>\r\n  <% end %>\r\n  </p>\r\n\r\n\r\nWritten by Michael Murray <mdmurray@gmail.com>","tagline":"Multi-model forms plugin for rails","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}